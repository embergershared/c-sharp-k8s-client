apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "listener.fullname" . }}-dep
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "listener.fullname" . }}-listener
  template:
    metadata:
      labels:
        app: {{ include "listener.fullname" . }}-listener
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: {{ .Values.listener.k8sServiceAccountName }}
      nodeSelector:
        "{{ .Values.listener.nodeSelector.key }}": {{ .Values.listener.nodeSelector.value }}
      containers:
      - name: listener
        image: {{ .Values.repository }}/{{ .Values.listener.image.name }}:{{ .Values.listener.image.tag }}
        resources:
          requests:
            memory: "{{ .Values.listener.resourcesRequests.memory }}"
            cpu: "{{ .Values.listener.resourcesRequests.cpu }}"
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: {{ include "listener.fullname" . }}-cm
        ports:
        - containerPort: {{ .Values.listener.service.targetPort }}
        volumeMounts:
        - name: azure-file
          mountPath: /mnt/{{ .Values.listener.azureFile.shareName }}
          readOnly: false
      volumes:
        - name: azure-file
          csi:
            driver: file.csi.azure.com
            volumeAttributes:
              shareName: {{ .Values.listener.azureFile.shareName }}
              secretName: {{ .Values.listener.azureFile.storageAccountName }}-secret
              mountOptions: "dir_mode=0777,file_mode=0777,cache=strict,actimeo=30,nosharesock"  # optional